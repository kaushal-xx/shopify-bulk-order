%h1 Locations
- pre_selection = params[:locations]||[]
= form_tag(ENV["pre_fix_url"]+"/place_bulk_order", method: :post) do 
  = hidden_field_tag "action_type", "save-location-list"
  - (params[:products]||[]).each do |v|
    = hidden_field_tag "products[]", v
  %table.table.table-striped
    %thead
      %tr
        %th #
        %th Region / Market
        %th Address
        %th City
        %th Actions
    %tbody
      - @distributors.each do |distributor|
        - if distributor.addresses[0].present?
          %tr
            %td= check_box_tag  'distributors[]', distributor.id, pre_selection.include?(distributor.id.to_s), class: 'distributor'
            %td= ["#{distributor.addresses[0].province}"," #{distributor.addresses[0].first_name}"].reject { |c| c.blank? }.join(",")
            %td= distributor.addresses.present? ? "#{distributor.addresses[0].address1}" : "N/A"
            %td= distributor.addresses.present? ? distributor.addresses[0].city : "N/A" 
            %td= link_to 'Edit', ENV["pre_fix_url"]+place_bulk_order_path(action_type: 'edit-location', id: distributor.id, locations: session[:bulk_order]['distributors']||[], products: session[:bulk_order]['products']||[])
  = submit_tag 'Save Locations for bulk order' ,class: 'btn btn-primary update-distributor'
%br

.row
  .col-md-2.col-sm-2.col-xs-2
    = link_to 'Add New Location', ENV["pre_fix_url"]+place_bulk_order_path(action_type: 'new-location', locations: session[:bulk_order]['distributors']||[], products: session[:bulk_order]['products']||[]) , class: 'btn btn-success'
  .col-md-2.col-sm-2.col-xs-2
    %button.btn.btn-success{"data-target" => "#csv-upload", "data-toggle" => "collapse"} Add Bulk Locations
%h2  
#csv-upload.collapse
  %form{:action => ENV["pre_fix_url"]+place_bulk_order_path(action_type: 'upload'), :method => "post", :role => "form"}
    .form-group
      .col-md-12
        .col-md-4
          %label{:for => "csv_upload_txt"}
            %strong Bulk Location file Upload
          %input#csv_upload_txt.form-control{:disabled => "disabled", :placeholder => "No file Selected...", :type => "text"}/
          %span.w3-tiny.pull-right (Supported format: csv, xls, xlsx)
          %h6
        .col-md-2
          %p{:style => "font-size:2px;"}  
          %input#csv_upload.form-control{:accept => ".csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", :name => "csv_upload", :style => "opacity:0; height:0px;", :type => "file"}/
          %input.form-control{:onclick => "this.previousElementSibling.click();", :style => "display:inline;", :type => "button", :value => "Browse"}/
        .col-md-2
          %p{:style => "font-size:12px;"}  
          %input.form-control{:id => 'btn-upload',:style => "display:none;", :type => "submit", :value => "Upload"}/
=# link_to 'Sync from Shop', sync_distributors_path ,class: 'btn btn-success'

:javascript
  csv_upload = document.getElementById("csv_upload");
  csv_upload_txt = document.getElementById("csv_upload_txt");

  csv_upload.onchange = function(e){
        var ext = csv_upload.value.match(/\.([^\.]+)$/)[1];
        switch(ext)
        {
            case 'csv':
            case 'xls':
            case 'xlsx':
                // alert('allowed');
                $('#btn-upload').css('display','inline');
                break;
            default:
                alert('invalid file type');
                this.value='';
        }
        csv_upload_txt.value = csv_upload.value.replace("fakepath","..");
  };