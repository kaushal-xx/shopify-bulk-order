/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or any plugin's vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any styles
 * defined in the other CSS/SCSS files in this directory. It is generally better to create a new
 * file per style scope.
 *
 *= require_tree .
 *= require_self
 *= require fancybox
 */
.row-fluid{
    white-space: nowrap;
}
.row-fluid .col-lg-3{
    display: inline-block;
}

.DocumentList
{
    overflow-x:scroll;
    overflow-y:hidden;
    width:100%;
    padding: 0 15px;
}

.DocumentItem
{
    padding:0;
    width:125px;
}

.list-inline {
  white-space:nowrap;
  display: inline-flex;
}
.dont-break-out {

  /* These are technically the same, but use both */
  overflow-wrap: break-word;
  word-wrap: break-word;

  -ms-word-break: break-all;
  /* This is the dangerous one in WebKit, as it breaks things wherever */
  word-break: break-all;
  /* Instead use this non-standard one: */
  word-break: break-word;

  /* Adds a hyphen where the word breaks, if supported (No Blink) */
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;

}
.ellipses {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

select {
    -moz-appearance: none;
    background: transparent none repeat scroll 0 0;
    box-sizing: border-box;
    color: #808080;
    display: block;
    font-size: 1.04286rem;
    font-weight: 400;
    height: auto;
    letter-spacing: initial;
    line-height: 1.61429rem;
    max-width: none;
    padding: 5px 32px 5px 10px;
    text-transform: initial;
    width: 100%;
}
.select-wrapper {
    background: #ffffff none repeat scroll 0 0;
    box-sizing: border-box;
    overflow: hidden;
    position: relative;
    vertical-align: bottom;
}
.next-icon {
    cursor: pointer;
    display: block;
    fill: #798c9c;
    height: 12px;
    margin-top: -6px;
    pointer-events: none;
    position: absolute;
    right: 10px;
    top: 50%;
    width: 12px;
}
a, a:active, a:focus {
    outline: medium none !important;
    text-decoration: none !important;
}
input[type="checkbox"], input[type="checkbox"]:active, input[type="checkbox"]:focus {
    outline: medium none !important;
    text-decoration: none !important;
}
.disabled, .disabled:hover {
    color: black;
    cursor: default;
    text-decoration: underline !important;
}
.text-gray, .text-gray:hover {
    color: gray;
}
.hr-full {
    border: 0.1em solid transparent;
    color: black;
    left: 0;
    margin-bottom: 0 !important;
    right: 0;
}
.gray-bg {
    background-color: lightgray;
    color: gray;
}
.text-green, .text-green:hover {
    color: green;
}
.text-green::after {
    font-family: FontAwesome;
}
#navbar {
    background-color: white !important;
    height: auto !important;
}
.alert-success {
    background-color: transparent !important;
    border: 2px solid green !important;
    color: green !important;
}
.row-height {
    display: table;
    height: 100%;
    table-layout: fixed;
    width: 100%;
}
.col-height {
    display: table-cell;
    float: none;
    height: 100%;
}
.no-border td {
    border: medium none !important;
}
.extra-padding td {
    padding-bottom: 15px !important;
    padding-top: 15px !important;
}
.fixed-width td {
    max-width: 150px !important;
    min-width: 150px !important;
}
.fixed-td td:first-of-type {
    max-width: 250px !important;
    min-width: 250px !important;
}
.fixed-td td:not(:first-of-type) {
    max-width: 120px !important;
    min-width: 120px !important;
}
input[type="number"] {
    -moz-appearance: textfield;
}
input[type="number"]:hover,
input[type="number"]:focus {
    -moz-appearance: number-input;
}
